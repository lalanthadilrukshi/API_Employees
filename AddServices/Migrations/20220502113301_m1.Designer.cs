// <auto-generated />
using System;
using AddServices.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AddServices.Migrations
{
    [DbContext(typeof(AddServicesDbContext))]
    [Migration("20220502113301_m1")]
    partial class m1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AddServices.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "B22698B8-42A2-4115-9631-1C2D1E2AC5F7",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "ead1eb46-6e0a-4595-9081-502d491e6aee",
                            Email = "Admin@Admin.com",
                            EmailConfirmed = true,
                            FirstName = "Master",
                            LastName = "Admin",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@ADMIN.COM",
                            NormalizedUserName = "MASTERADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAEI2vr2dS0aQYDXiGJZvgL7h4PSmDoV5mCcarev4CCxXAYz21HrVHA3BV3DzPDZ17KQ==",
                            PhoneNumber = "XXXXXXXXXXXXX",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "00000000-0000-0000-0000-000000000000",
                            TwoFactorEnabled = false,
                            UserName = "masteradmin"
                        });
                });

            modelBuilder.Entity("AddServices.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FKDistrictId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FKDistrictId");

                    b.ToTable("City");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FKDistrictId = 1,
                            Name = "Colombo"
                        },
                        new
                        {
                            Id = 2,
                            FKDistrictId = 1,
                            Name = "Dehiwala"
                        },
                        new
                        {
                            Id = 3,
                            FKDistrictId = 1,
                            Name = "Kaduwela"
                        },
                        new
                        {
                            Id = 4,
                            FKDistrictId = 1,
                            Name = "Moratuwa"
                        },
                        new
                        {
                            Id = 5,
                            FKDistrictId = 1,
                            Name = "Sri Jayawardenapura Kotte"
                        },
                        new
                        {
                            Id = 6,
                            FKDistrictId = 1,
                            Name = "Kolonnawa"
                        },
                        new
                        {
                            Id = 7,
                            FKDistrictId = 1,
                            Name = "Seethawaka"
                        },
                        new
                        {
                            Id = 8,
                            FKDistrictId = 1,
                            Name = "Maharagama"
                        },
                        new
                        {
                            Id = 9,
                            FKDistrictId = 1,
                            Name = "Kesbewa"
                        },
                        new
                        {
                            Id = 10,
                            FKDistrictId = 1,
                            Name = "Boralesgamuwa"
                        },
                        new
                        {
                            Id = 11,
                            FKDistrictId = 1,
                            Name = "Kotikawatta Mulleriyawa"
                        },
                        new
                        {
                            Id = 12,
                            FKDistrictId = 1,
                            Name = "Seethawakapura"
                        },
                        new
                        {
                            Id = 13,
                            FKDistrictId = 1,
                            Name = "Homagama"
                        },
                        new
                        {
                            Id = 14,
                            FKDistrictId = 2,
                            Name = "Gampaha"
                        },
                        new
                        {
                            Id = 15,
                            FKDistrictId = 2,
                            Name = "Negombo"
                        },
                        new
                        {
                            Id = 16,
                            FKDistrictId = 2,
                            Name = "Katana-Seduwa"
                        },
                        new
                        {
                            Id = 17,
                            FKDistrictId = 2,
                            Name = "Jaela"
                        },
                        new
                        {
                            Id = 18,
                            FKDistrictId = 2,
                            Name = "Wattala-Maboal"
                        },
                        new
                        {
                            Id = 19,
                            FKDistrictId = 2,
                            Name = "Peliyagoda"
                        },
                        new
                        {
                            Id = 20,
                            FKDistrictId = 2,
                            Name = "Minuwangoda"
                        },
                        new
                        {
                            Id = 21,
                            FKDistrictId = 2,
                            Name = "Aththanagalla"
                        },
                        new
                        {
                            Id = 22,
                            FKDistrictId = 2,
                            Name = "Biyagama"
                        },
                        new
                        {
                            Id = 23,
                            FKDistrictId = 2,
                            Name = "Divulapitiya"
                        },
                        new
                        {
                            Id = 24,
                            FKDistrictId = 2,
                            Name = "Dompe"
                        },
                        new
                        {
                            Id = 25,
                            FKDistrictId = 2,
                            Name = "Kelaniya"
                        },
                        new
                        {
                            Id = 26,
                            FKDistrictId = 2,
                            Name = "Mahara"
                        },
                        new
                        {
                            Id = 27,
                            FKDistrictId = 2,
                            Name = "Meerigama"
                        });
                });

            modelBuilder.Entity("AddServices.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Company");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "583 Wall Dr. Gwynn Oak, MD 21207",
                            Country = "USA",
                            Name = "IT_Solutions Ltd"
                        },
                        new
                        {
                            Id = 2,
                            Address = "312 Forest Avenue, BF 923",
                            Country = "USA",
                            Name = "Admin_Solutions Ltd"
                        });
                });

            modelBuilder.Entity("AddServices.Models.District", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FKProvinceId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FKProvinceId");

                    b.ToTable("District");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FKProvinceId = 1,
                            Name = "Colombo"
                        },
                        new
                        {
                            Id = 2,
                            FKProvinceId = 1,
                            Name = "Gampaha"
                        },
                        new
                        {
                            Id = 3,
                            FKProvinceId = 3,
                            Name = "Jafna"
                        });
                });

            modelBuilder.Entity("AddServices.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Salary")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Sam Raiden",
                            Position = "Software developer",
                            Salary = 0f
                        },
                        new
                        {
                            Id = 2,
                            Name = "Jana McLeaf",
                            Position = "Software developer",
                            Salary = 0f
                        },
                        new
                        {
                            Id = 3,
                            Name = "Kane Miller",
                            Position = "Administrator",
                            Salary = 0f
                        });
                });

            modelBuilder.Entity("AddServices.Models.MainCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MainCategory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "IT"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Medical"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Hygien"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Education and Training"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Sports"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Entertainment-music/performing-arts"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Mechanical"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Construction and house repairs"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Automobile"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Transport"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Media"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Video and Photography"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Advertising"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Events"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Community services"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Care"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Clerical"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Labour"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Plantation and landscape"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Mobile"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Office"
                        });
                });

            modelBuilder.Entity("AddServices.Models.Province", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Province");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Western"
                        },
                        new
                        {
                            Id = 2,
                            Name = "North Western"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Northern"
                        });
                });

            modelBuilder.Entity("AddServices.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FKSubCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("FKUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("FKVillageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qualifications")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("jobDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rates")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("workExperience")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FKSubCategoryId");

                    b.HasIndex("FKUserId");

                    b.HasIndex("FKVillageId");

                    b.ToTable("Service");
                });

            modelBuilder.Entity("AddServices.Models.Service_Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FKServiceId")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FKServiceId");

                    b.ToTable("Service_Image");
                });

            modelBuilder.Entity("AddServices.Models.SubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FKCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FKCategoryId");

                    b.ToTable("SubCategory");

                    b.HasData(
                        new
                        {
                            Id = 101,
                            FKCategoryId = 1,
                            Name = "Software engineering"
                        },
                        new
                        {
                            Id = 102,
                            FKCategoryId = 1,
                            Name = "Computer repairs"
                        },
                        new
                        {
                            Id = 201,
                            FKCategoryId = 2,
                            Name = "Doctor"
                        },
                        new
                        {
                            Id = 202,
                            FKCategoryId = 2,
                            Name = "Doctor-Telemedicine"
                        },
                        new
                        {
                            Id = 301,
                            FKCategoryId = 3,
                            Name = "Cleaning and genital services"
                        },
                        new
                        {
                            Id = 302,
                            FKCategoryId = 3,
                            Name = "Environment cleaning"
                        },
                        new
                        {
                            Id = 401,
                            FKCategoryId = 4,
                            Name = "Private tutor"
                        },
                        new
                        {
                            Id = 402,
                            FKCategoryId = 4,
                            Name = "Speach and hearing training"
                        },
                        new
                        {
                            Id = 501,
                            FKCategoryId = 5,
                            Name = "Training"
                        },
                        new
                        {
                            Id = 502,
                            FKCategoryId = 5,
                            Name = "Clubs"
                        },
                        new
                        {
                            Id = 601,
                            FKCategoryId = 6,
                            Name = "Music bands"
                        },
                        new
                        {
                            Id = 602,
                            FKCategoryId = 6,
                            Name = "DJ"
                        },
                        new
                        {
                            Id = 603,
                            FKCategoryId = 6,
                            Name = "Dance troupe"
                        },
                        new
                        {
                            Id = 604,
                            FKCategoryId = 6,
                            Name = "Drama and film"
                        },
                        new
                        {
                            Id = 701,
                            FKCategoryId = 7,
                            Name = "Mobile engine repairs"
                        },
                        new
                        {
                            Id = 702,
                            FKCategoryId = 7,
                            Name = "Machine repairs"
                        },
                        new
                        {
                            Id = 801,
                            FKCategoryId = 8,
                            Name = "Masonry"
                        },
                        new
                        {
                            Id = 802,
                            FKCategoryId = 8,
                            Name = "Wood work"
                        },
                        new
                        {
                            Id = 803,
                            FKCategoryId = 8,
                            Name = "Electrical and wiring"
                        },
                        new
                        {
                            Id = 804,
                            FKCategoryId = 8,
                            Name = "Plumbing"
                        },
                        new
                        {
                            Id = 901,
                            FKCategoryId = 9,
                            Name = "Car wash"
                        },
                        new
                        {
                            Id = 902,
                            FKCategoryId = 9,
                            Name = "Car detailing"
                        },
                        new
                        {
                            Id = 1001,
                            FKCategoryId = 10,
                            Name = "Attorney at law"
                        },
                        new
                        {
                            Id = 1101,
                            FKCategoryId = 11,
                            Name = "Vehicles for hire"
                        },
                        new
                        {
                            Id = 1102,
                            FKCategoryId = 11,
                            Name = "Drivers"
                        },
                        new
                        {
                            Id = 1103,
                            FKCategoryId = 11,
                            Name = "Movers"
                        },
                        new
                        {
                            Id = 1201,
                            FKCategoryId = 12,
                            Name = "News reporting"
                        },
                        new
                        {
                            Id = 1301,
                            FKCategoryId = 13,
                            Name = "Photography"
                        },
                        new
                        {
                            Id = 1302,
                            FKCategoryId = 13,
                            Name = "Video"
                        },
                        new
                        {
                            Id = 1501,
                            FKCategoryId = 15,
                            Name = "Weddings"
                        },
                        new
                        {
                            Id = 1502,
                            FKCategoryId = 15,
                            Name = "Funerals"
                        },
                        new
                        {
                            Id = 1503,
                            FKCategoryId = 15,
                            Name = "Catering"
                        },
                        new
                        {
                            Id = 1701,
                            FKCategoryId = 17,
                            Name = "Home nursing"
                        },
                        new
                        {
                            Id = 1702,
                            FKCategoryId = 17,
                            Name = "ChiId care and baby sitting"
                        },
                        new
                        {
                            Id = 1703,
                            FKCategoryId = 17,
                            Name = "Aged care"
                        },
                        new
                        {
                            Id = 1704,
                            FKCategoryId = 17,
                            Name = "Pet care"
                        },
                        new
                        {
                            Id = 1801,
                            FKCategoryId = 18,
                            Name = "Type setting"
                        },
                        new
                        {
                            Id = 1802,
                            FKCategoryId = 18,
                            Name = "Translations"
                        },
                        new
                        {
                            Id = 1901,
                            FKCategoryId = 19,
                            Name = "Labour work"
                        },
                        new
                        {
                            Id = 2001,
                            FKCategoryId = 20,
                            Name = "Gardening services"
                        },
                        new
                        {
                            Id = 2002,
                            FKCategoryId = 20,
                            Name = "Tree felling"
                        },
                        new
                        {
                            Id = 2101,
                            FKCategoryId = 21,
                            Name = "Mobile repairs"
                        },
                        new
                        {
                            Id = 2201,
                            FKCategoryId = 22,
                            Name = "Office supplies"
                        });
                });

            modelBuilder.Entity("AddServices.Models.Village", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FKCityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FKCityId");

                    b.ToTable("Village");

                    b.HasData(
                        new
                        {
                            Id = 101,
                            FKCityId = 1,
                            Name = "Pettah"
                        },
                        new
                        {
                            Id = 102,
                            FKCityId = 1,
                            Name = "Modera"
                        },
                        new
                        {
                            Id = 103,
                            FKCityId = 1,
                            Name = "Kotahena"
                        },
                        new
                        {
                            Id = 201,
                            FKCityId = 2,
                            Name = "Dehiwala"
                        },
                        new
                        {
                            Id = 202,
                            FKCityId = 2,
                            Name = "Mount-Lavinia"
                        },
                        new
                        {
                            Id = 203,
                            FKCityId = 2,
                            Name = "Pepiliyana"
                        },
                        new
                        {
                            Id = 301,
                            FKCityId = 3,
                            Name = "Malabe"
                        },
                        new
                        {
                            Id = 302,
                            FKCityId = 3,
                            Name = "Athurugiriya"
                        },
                        new
                        {
                            Id = 401,
                            FKCityId = 4,
                            Name = "Moratuwa"
                        },
                        new
                        {
                            Id = 402,
                            FKCityId = 4,
                            Name = "Lunawa"
                        },
                        new
                        {
                            Id = 601,
                            FKCityId = 6,
                            Name = "Kolonnawa"
                        },
                        new
                        {
                            Id = 602,
                            FKCityId = 6,
                            Name = "Wellampitiya"
                        },
                        new
                        {
                            Id = 701,
                            FKCityId = 7,
                            Name = "Seethawaka"
                        },
                        new
                        {
                            Id = 801,
                            FKCityId = 8,
                            Name = "Maharagama"
                        },
                        new
                        {
                            Id = 802,
                            FKCityId = 8,
                            Name = "Kottawa"
                        },
                        new
                        {
                            Id = 901,
                            FKCityId = 9,
                            Name = "Kesbewa"
                        },
                        new
                        {
                            Id = 902,
                            FKCityId = 9,
                            Name = "Piliyandala"
                        },
                        new
                        {
                            Id = 1001,
                            FKCityId = 10,
                            Name = "Boralesgamuwa"
                        },
                        new
                        {
                            Id = 1002,
                            FKCityId = 10,
                            Name = "Delkanda"
                        },
                        new
                        {
                            Id = 1101,
                            FKCityId = 11,
                            Name = "Kotikawatta"
                        },
                        new
                        {
                            Id = 1102,
                            FKCityId = 11,
                            Name = "Mulleriyawa"
                        },
                        new
                        {
                            Id = 1103,
                            FKCityId = 11,
                            Name = "Himbutana"
                        },
                        new
                        {
                            Id = 1201,
                            FKCityId = 12,
                            Name = "Seethawakapura"
                        },
                        new
                        {
                            Id = 1301,
                            FKCityId = 13,
                            Name = "Homagama"
                        },
                        new
                        {
                            Id = 1302,
                            FKCityId = 13,
                            Name = "Pitipana"
                        },
                        new
                        {
                            Id = 1303,
                            FKCityId = 13,
                            Name = "Kiriwanthuduwa"
                        },
                        new
                        {
                            Id = 1401,
                            FKCityId = 14,
                            Name = "Gampaha"
                        },
                        new
                        {
                            Id = 1402,
                            FKCityId = 14,
                            Name = "Udugampola"
                        },
                        new
                        {
                            Id = 1501,
                            FKCityId = 15,
                            Name = "Negombo"
                        },
                        new
                        {
                            Id = 1502,
                            FKCityId = 15,
                            Name = "Sarukkuwa"
                        },
                        new
                        {
                            Id = 1601,
                            FKCityId = 16,
                            Name = "Katana-Seduwa"
                        },
                        new
                        {
                            Id = 1701,
                            FKCityId = 17,
                            Name = "Jaela"
                        },
                        new
                        {
                            Id = 1801,
                            FKCityId = 18,
                            Name = "Maboal"
                        },
                        new
                        {
                            Id = 1802,
                            FKCityId = 18,
                            Name = "Wattala"
                        },
                        new
                        {
                            Id = 1803,
                            FKCityId = 18,
                            Name = "Kandana"
                        },
                        new
                        {
                            Id = 1901,
                            FKCityId = 19,
                            Name = "Peliyagoda"
                        },
                        new
                        {
                            Id = 2001,
                            FKCityId = 20,
                            Name = "Minuwangoda"
                        },
                        new
                        {
                            Id = 2101,
                            FKCityId = 21,
                            Name = "Nittambuwa"
                        },
                        new
                        {
                            Id = 2102,
                            FKCityId = 21,
                            Name = "Aththanagalla"
                        },
                        new
                        {
                            Id = 2103,
                            FKCityId = 21,
                            Name = "Thihariya"
                        },
                        new
                        {
                            Id = 2201,
                            FKCityId = 22,
                            Name = "Biyagama"
                        },
                        new
                        {
                            Id = 2301,
                            FKCityId = 23,
                            Name = "Divulapitiya"
                        },
                        new
                        {
                            Id = 2401,
                            FKCityId = 24,
                            Name = "Dompe"
                        },
                        new
                        {
                            Id = 2402,
                            FKCityId = 24,
                            Name = "Kirindiwela"
                        },
                        new
                        {
                            Id = 2501,
                            FKCityId = 25,
                            Name = "Kelaniya"
                        },
                        new
                        {
                            Id = 2502,
                            FKCityId = 25,
                            Name = "Kelani Mulla"
                        },
                        new
                        {
                            Id = 2601,
                            FKCityId = 26,
                            Name = "Mahara"
                        },
                        new
                        {
                            Id = 2602,
                            FKCityId = 26,
                            Name = "Kadawatha"
                        },
                        new
                        {
                            Id = 2603,
                            FKCityId = 26,
                            Name = "Balummahara"
                        },
                        new
                        {
                            Id = 2701,
                            FKCityId = 27,
                            Name = "Meerigama"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "2301D884-221A-4E7D-B509-0113DCC043E2",
                            ConcurrencyStamp = "252ba61c-5a42-4a3a-8b85-8a230e7f2205",
                            Name = "Viewer",
                            NormalizedName = "VIEWER"
                        },
                        new
                        {
                            Id = "2301D884-221A-4E7D-B509-0113DCC043E1",
                            ConcurrencyStamp = "09868c81-faa7-4e3c-981b-c55d86f0e582",
                            Name = "Administrator",
                            NormalizedName = "ADMINISTRATOR"
                        },
                        new
                        {
                            Id = "7D9B7113-A8F8-4035-99A7-A20DD400F6A3",
                            ConcurrencyStamp = "4d26659b-83e7-4be1-961f-8b453d1917ea",
                            Name = "Employee",
                            NormalizedName = "EMPLOYEE"
                        },
                        new
                        {
                            Id = "78A7570F-3CE5-48BA-9461-80283ED1D94D",
                            ConcurrencyStamp = "4602d2f3-a28e-443a-84cb-e8d9be4207f3",
                            Name = "Seller",
                            NormalizedName = "SELLER"
                        },
                        new
                        {
                            Id = "01B168FE-810B-432D-9010-233BA0B380E9",
                            ConcurrencyStamp = "3bf774ca-480f-4305-8d22-ed307fb66cc4",
                            Name = "Customer",
                            NormalizedName = "CUSTOMER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "B22698B8-42A2-4115-9631-1C2D1E2AC5F7",
                            RoleId = "2301D884-221A-4E7D-B509-0113DCC043E1"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("AddServices.Models.City", b =>
                {
                    b.HasOne("AddServices.Models.District", "District")
                        .WithMany("Citys")
                        .HasForeignKey("FKDistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");
                });

            modelBuilder.Entity("AddServices.Models.District", b =>
                {
                    b.HasOne("AddServices.Models.Province", "Province")
                        .WithMany("Districts")
                        .HasForeignKey("FKProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Province");
                });

            modelBuilder.Entity("AddServices.Models.Service", b =>
                {
                    b.HasOne("AddServices.Models.SubCategory", "SubCategory")
                        .WithMany("Services")
                        .HasForeignKey("FKSubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AddServices.Models.ApplicationUser", "User")
                        .WithMany("Services")
                        .HasForeignKey("FKUserId");

                    b.HasOne("AddServices.Models.Village", "Village")
                        .WithMany("Services")
                        .HasForeignKey("FKVillageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubCategory");

                    b.Navigation("User");

                    b.Navigation("Village");
                });

            modelBuilder.Entity("AddServices.Models.Service_Image", b =>
                {
                    b.HasOne("AddServices.Models.Service", "service")
                        .WithMany("Service_Images")
                        .HasForeignKey("FKServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("service");
                });

            modelBuilder.Entity("AddServices.Models.SubCategory", b =>
                {
                    b.HasOne("AddServices.Models.MainCategory", "MainCategory")
                        .WithMany("SubCategorys")
                        .HasForeignKey("FKCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MainCategory");
                });

            modelBuilder.Entity("AddServices.Models.Village", b =>
                {
                    b.HasOne("AddServices.Models.City", "City")
                        .WithMany("Villages")
                        .HasForeignKey("FKCityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("AddServices.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("AddServices.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AddServices.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("AddServices.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AddServices.Models.ApplicationUser", b =>
                {
                    b.Navigation("Services");
                });

            modelBuilder.Entity("AddServices.Models.City", b =>
                {
                    b.Navigation("Villages");
                });

            modelBuilder.Entity("AddServices.Models.District", b =>
                {
                    b.Navigation("Citys");
                });

            modelBuilder.Entity("AddServices.Models.MainCategory", b =>
                {
                    b.Navigation("SubCategorys");
                });

            modelBuilder.Entity("AddServices.Models.Province", b =>
                {
                    b.Navigation("Districts");
                });

            modelBuilder.Entity("AddServices.Models.Service", b =>
                {
                    b.Navigation("Service_Images");
                });

            modelBuilder.Entity("AddServices.Models.SubCategory", b =>
                {
                    b.Navigation("Services");
                });

            modelBuilder.Entity("AddServices.Models.Village", b =>
                {
                    b.Navigation("Services");
                });
#pragma warning restore 612, 618
        }
    }
}
